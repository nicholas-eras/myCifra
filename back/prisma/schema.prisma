generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Song {
  id     Int      @id @default(autoincrement())
  artist String
  name   String
  createdBy  String? 
  lyrics Lyric[]

  SongText SongText[]
  created    User?     @relation(fields: [createdBy], references: [id])
}

model Lyric {
  id        Int    @id @default(autoincrement())
  lineIndex Int
  text      String @db.Text
  songId   Int

  song  Song @relation(fields: [songId], references: [id], onDelete: Cascade)
  chords Chord[]
  @@unique([songId, lineIndex])
}

model Chord {
  id         Int    @id @default(autoincrement())
  lyricId    Int
  chord      String
  position   Int
  offset     Float
  width      String
  
  lyric Lyric @relation(fields: [lyricId], references: [id], onDelete: Cascade)
}

model SongText {
  id         Int   @id @default(autoincrement())
  songId     Int
  createdAt  DateTime @default(now())
  lyrics     Json

  song       Song     @relation(fields: [songId], references: [id], onDelete: Cascade)
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  name           String?
  avatarUrl      String?  
  googleId       String   @unique 
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  isAdmin        Boolean  @default(false)
  canAddSong     Boolean  @default(false)
  canSyncCifra   Boolean  @default(false)

  Song Song[]
}


